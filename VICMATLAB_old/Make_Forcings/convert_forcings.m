%% Convert forcing files
%
% Original code from Dongyue Li (obtained Sept. 2019)
% Revised 9/20/2019 JRS
%
% INPUTS
% ASCII-formatted forcing data for the VIC-5 classic driver (directory)
% res = spatial resolution of the forcing data
%
% OUTPUTS
% Meteorological forcing input file for the VIC model image driver
%
% Assumes the order of the columns in the ASCII forcing file is as follows
% [temperature, precipitation, pressure, shortwave, longwave, vp, wind speed]
%
% TODO: adapt this to generate separate forcing files for each year

function info_nc = convert_forcings(indir, prefix, res, outname, start_date, domainfile)

%%%%%%%%%%%%%%%%%%%%
disagg_flag = 1;
% flag for handling the case where ascii forcings have been generated by
% downscaling prec | temp | wind speed using the VIC-4 MT-CLIM disaggregator
%%%%%%%%%%%%%%%%%%%%

% indir = '/Volumes/HD4/SWOTDA/Data/UMRB/Downscaled_Forcings/ascii_1993';
% prefix = 'Forcings';
% res = 1/16;
% outname = '/Volumes/HD4/SWOTDA/Data/UMRB/forc.1993';

% indir = '/Volumes/HD4/SWOTDA/Data/IRB/VIC/forc_ascii_1980-1990';
% prefix = 'Forcings';
% res = 1/16;
% outname = '/Volumes/HD4/SWOTDA/Data/IRB/VIC/Image/forc.';

% indir = '/Volumes/HD3/SWOTDA/Data/IRB/VIC/34N_75E/Forc_1999-2001_ascii';
% prefix = 'Forcings';
% res = 1/16;
% outname = '/Volumes/HD3/SWOTDA/Data/IRB/VIC/34N_75E/Forc_1999-2001_image_nc/test_tile_forc1.nc';

% indir = '/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_4/forc_ascii_1999';
% prefix = 'Forcings';
% res = 1/16;
% outname = '/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_4/Image_VICGlobal/forc.1999.nc';

%% Part 0 Read in the data

file=dir(fullfile(indir, [prefix '*'])); % read in hourly disaggregated forcing
length_prefix = length(prefix);

mask = ncread(domainfile, 'mask');
lon_dom = ncread(domainfile, 'lon');
lat_dom = ncread(domainfile, 'lat');

ncells = length(file);
lat_rec = NaN(ncells, 1);
lon_rec = NaN(ncells, 1);
for i=1:length(file)
    lat_rec(i)=str2num(file(i).name(length_prefix+2:length_prefix+9));    
    lon_rec(i)=str2num(file(i).name(length_prefix+11:length_prefix+18));   
end

% lat2 = unique(lat_rec);
% lon2 = unique(lon_rec);

min_lat=min(lat_rec);
max_lat=max(lat_rec);
min_lon=min(lon_rec);
max_lon=max(lon_rec);

lat=([min_lat:res:max_lat])';
lon=([min_lon:res:max_lon])';

%%%%%%%%% hacky thing to get the domain to match

min_lon = min(lon_dom);
max_lon = max(lon_dom);
min_lat = min(lat_dom);
max_lat = max(lat_dom);

lat=([min_lat:res:max_lat])';
lon=([min_lon:res:max_lon])';

%%%%%%%%%

% get the lon/lat index of each cell in the soil file
lon_ind = NaN(ncells, 1);
lat_ind = NaN(ncells, 1);
tol = res/2;
for i=1:length(file)
    lon_ind(i)=find(abs(lon - lon_rec(i)) < tol);
    lat_ind(i)=find(abs(lat - lat_rec(i)) < tol);
end

% sp_data=dlmread(['./disaggregated_forcing/',file(1).name]);
sp_data=dlmread(fullfile(indir, file(1).name));
time=[0:1:(size(sp_data,1)-1)]';

mask=nan(length(lon),length(lat));
for i=1:length(file)
    mask(lon_ind(i,1),lat_ind(i,1))=1; 
end

tas=nan(length(lon),length(lat),length(time));
prcp=nan(length(lon),length(lat),length(time));
pres=nan(length(lon),length(lat),length(time));
dswrf=nan(length(lon),length(lat),length(time));
dlwrf=nan(length(lon),length(lat),length(time));
vp=nan(length(lon),length(lat),length(time));
wind=nan(length(lon),length(lat),length(time));

if disagg_flag == 0
    for i=1:length(file)
       data = dlmread(fullfile(indir, file(i).name));
       tas(lon_ind(i,1),lat_ind(i,1),:)=data(:,1);   
       prcp(lon_ind(i,1),lat_ind(i,1),:) = data(:,2);
       pres(lon_ind(i,1),lat_ind(i,1),:)=data(:,3); 
       dswrf(lon_ind(i,1),lat_ind(i,1),:)=data(:,4);
       dlwrf(lon_ind(i,1),lat_ind(i,1),:)=data(:,5);
       vp(lon_ind(i,1),lat_ind(i,1),:)=data(:,6);
       wind(lon_ind(i,1),lat_ind(i,1),:)=data(:,7);
    end
end

if disagg_flag == 1
    for i=1:length(file)
       data = dlmread(fullfile(indir, file(i).name));
       tas(lon_ind(i,1),lat_ind(i,1),:)=data(:,2);   
       prcp(lon_ind(i,1),lat_ind(i,1),:) = data(:,1);
       pres(lon_ind(i,1),lat_ind(i,1),:)=data(:,6); 
       dswrf(lon_ind(i,1),lat_ind(i,1),:)=data(:,3);
       dlwrf(lon_ind(i,1),lat_ind(i,1),:)=data(:,4);
       vp(lon_ind(i,1),lat_ind(i,1),:)=data(:,7);
       wind(lon_ind(i,1),lat_ind(i,1),:)=data(:,8);
    end
end

%% Part 1 Create the NetCDF file

format_nc =  'netcdf4_classic';

nccreate(outname,'time',...
    'Datatype','int32',...
    'Dimensions',{'time',length(time)},...
          'Format', format_nc)

nccreate(outname,'lon',...
    'Datatype','double',...
    'Dimensions',{'lon',length(lon)},...
          'Format', format_nc)
      
nccreate(outname,'lat',...
    'Datatype','double',...
    'Dimensions',{'lat',length(lat)},...
          'Format', format_nc)    
     
nccreate(outname,'mask',...
    'Datatype','double',...
    'Dimensions',{'lon',length(lon),'lat',length(lat)},...
          'Format', format_nc)
      
nccreate(outname,'prcp',...
    'Datatype','single',...
    'Dimensions',{'lon',length(lon),'lat',length(lat),'time',length(time)},...
          'Format', format_nc)      
      
nccreate(outname,'tas',...
    'Datatype','single',...
    'Dimensions',{'lon',length(lon),'lat',length(lat),'time',length(time)},...
          'Format', format_nc)       
      
nccreate(outname,'dswrf',...
    'Datatype','single',...
    'Dimensions',{'lon',length(lon),'lat',length(lat),'time',length(time)},...
          'Format', format_nc)   

nccreate(outname,'dlwrf',...
    'Datatype','single',...
    'Dimensions',{'lon',length(lon),'lat',length(lat),'time',length(time)},...
          'Format', format_nc)   

nccreate(outname,'pres',...
    'Datatype','single',...
    'Dimensions',{'lon',length(lon),'lat',length(lat),'time',length(time)},...
          'Format', format_nc)   

nccreate(outname,'vp',...
    'Datatype','single',...
    'Dimensions',{'lon',length(lon),'lat',length(lat),'time',length(time)},...
          'Format', format_nc)   

nccreate(outname,'wind',...
    'Datatype','single',...
    'Dimensions',{'lon',length(lon),'lat',length(lat),'time',length(time)},...
          'Format', format_nc)   
     
ncwrite(outname,'time',time);
ncwrite(outname,'lon',lon);
ncwrite(outname,'lat',lat);
ncwrite(outname,'mask',mask);

ncwrite(outname,'prcp',prcp);
ncwrite(outname,'tas',tas);
ncwrite(outname,'pres',pres);
ncwrite(outname,'dswrf',dswrf);
ncwrite(outname,'dlwrf',dlwrf);
ncwrite(outname,'vp',vp);
ncwrite(outname,'wind',wind);

%% Write attributes to netCDF file

ncwriteatt(outname,...
    'time','units',['hours since ' start_date]);
ncwriteatt(outname,...
    'time','calendar','proleptic_gregorian');
% 1993-01-01

ncwriteatt(outname,...
    'lon','standard_name','longitude');
ncwriteatt(outname,...
    'lon','long_name','longitude of grid cell center');
ncwriteatt(outname,...
    'lon','units','degrees_east');
ncwriteatt(outname,...
    'lon','axis','X');

ncwriteatt(outname,...
    'lat','standard_name','latitude');
ncwriteatt(outname,...
    'lat','long_name','latitude of grid cell center');
ncwriteatt(outname,...
    'lat','units','degrees_north');
ncwriteatt(outname,...
    'lat','axis','Y');

ncwriteatt(outname,...
    'mask','comment','NaN indicates cell is not active');
ncwriteatt(outname,...
    'mask','long_name','fraction of grid cell that is activedomain mask');
ncwriteatt(outname,...
    'mask','note','unitlessunitless');
    
ncwriteatt(outname,...
    'prcp','long_name','PREC');
ncwriteatt(outname,...
    'prcp','column',0);
ncwriteatt(outname,...
    'prcp','units','mm/step');
ncwriteatt(outname,...
    'prcp','description','PREC');

ncwriteatt(outname,...
    'tas','long_name','AIR_TEMP');
ncwriteatt(outname,...
    'tas','column',1);
ncwriteatt(outname,...
    'tas','units','C');
ncwriteatt(outname,...
    'tas','description','AIR_TEMP');

ncwriteatt(outname,...
    'dswrf','long_name','SWDOWN');
ncwriteatt(outname,...
    'dswrf','column',2);
ncwriteatt(outname,...
    'dswrf','units','S_/m2');
ncwriteatt(outname,...
    'dswrf','description','SWDOWN');

ncwriteatt(outname,...
    'dlwrf','long_name','LWDOWN');
ncwriteatt(outname,...
    'dlwrf','column',3);
ncwriteatt(outname,...
    'dlwrf','units','S_/m2');
ncwriteatt(outname,...
    'dlwrf','description','LWDOWN');

ncwriteatt(outname,...
    'pres','long_name','PRESSURE');
ncwriteatt(outname,...
    'pres','column',5);
ncwriteatt(outname,...
    'pres','units','KPa');
ncwriteatt(outname,...
    'pres','description','PRESSURE');

ncwriteatt(outname,...
    'vp','long_name','VP');
ncwriteatt(outname,...
    'vp','column',6);
ncwriteatt(outname,...
    'vp','units','KPa');
ncwriteatt(outname,...
    'vp','description','VP');

ncwriteatt(outname,...
    'wind','long_name','WIND');
ncwriteatt(outname,...
    'wind','column',7);
ncwriteatt(outname,...
    'wind','units','m/s');
ncwriteatt(outname,...
    'wind','description','WIND');

% check the created netCDF file
info_nc = ncinfo(outname);

return
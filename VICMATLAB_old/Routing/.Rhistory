"#9c946a", # Closed | green
"#ede2a8", # Open | green
"#9e8f41",  # Woody savannas | brown
"#edc909", # Savannas | brown
"#05fc3f", # Grasslands | brown
"#1161bd", # Wetlands | blue
"#c7a7eb", # Crops | yellow
"#fc0505", # Urban | red
"#ddd8e3", # CropMosaic | yellow
"#0afce0", # Snow | white/blue
"#bdbaa2") # Barren | brown
cols <- c("#0014f0", # OpenWater | blue
"#1f7035", # dark green | EverNeedle
"#439e3c" ,# EverBroad | green
"#709e3c" ,# DecidNeedle | green
"#64f58c", # DecidBroad | light green
"#c2e67a", # Mixed | green
"#9c946a", # Closed | green
"#ede2a8", # Open | green
"#9e8f41",  # Woody savannas | brown
"#edc909", # Savannas | brown
"#05fc3f", # Grasslands | brown
"#1161bd", # Wetlands | blue
"#c7a7eb", # Crops | yellow
"#fc0505", # Urban | red
"#ddd8e3", # CropMosaic | yellow
"#0afce0", # Snow | white/blue
"#bdbaa2") # Barren | brown
plot(r, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
cols <- c("white", # OpenWater | blue
"#1f7035", # dark green | EverNeedle
"#439e3c" ,# EverBroad | green
"#709e3c" ,# DecidNeedle | green
"#64f58c", # DecidBroad | light green
"#c2e67a", # Mixed | green
"#9c946a", # Closed | green
"#ede2a8", # Open | green
"#9e8f41",  # Woody savannas | brown
"#edc909", # Savannas | brown
"#05fc3f", # Grasslands | brown
"#1161bd", # Wetlands | blue
"#c7a7eb", # Crops | yellow
"#fc0505", # Urban | red
"#ddd8e3", # CropMosaic | yellow
"#0afce0", # Snow | white/blue
"#bdbaa2") # Barren | brown
plot(r, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
map("world", boundary = TRUE, add = TRUE)
cols <- c("white", # OpenWater | blue
"#1f7035", # dark green | EverNeedle
"#439e3c" ,# EverBroad | green
"#709e3c" ,# DecidNeedle | green
"#64f58c", # DecidBroad | light green
"#c2e67a", # Mixed | green
"lightorange", # Closed | green
"#ede2a8", # Open | green
"#9e8f41",  # Woody savannas | brown
"#edc909", # Savannas | brown
"yellow", # Grasslands | brown
"#1161bd", # Wetlands | blue
"#c7a7eb", # Crops | yellow
"#fc0505", # Urban | red
"#ddd8e3", # CropMosaic | yellow
"#0afce0", # Snow | white/blue
"#bdbaa2") # Barren | brown
plot(r, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
cols <- c("white", # OpenWater | blue
"#1f7035", # dark green | EverNeedle
"#439e3c" ,# EverBroad | green
"#709e3c" ,# DecidNeedle | green
"#64f58c", # DecidBroad | light green
"#c2e67a", # Mixed | green
"orange", # Closed | green
"#ede2a8", # Open | green
"#9e8f41",  # Woody savannas | brown
"#edc909", # Savannas | brown
"yellow", # Grasslands | brown
"#1161bd", # Wetlands | blue
"#c7a7eb", # Crops | yellow
"#fc0505", # Urban | red
"#ddd8e3", # CropMosaic | yellow
"#0afce0", # Snow | white/blue
"#bdbaa2") # Barren | brown
plot(r, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
map("world", boundary = TRUE, add = TRUE)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 5)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
plot(r, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
png(file.path(ourdir, "IGBP_Majority_LC_Class.png"),
width = 1240, height = 1000)
plot(r, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
dev.off()
outdir <- "/Users/jschap/Box Sync/Margulis_Research_Group/Jacob/VICParametersGlobal_ESSD/Figures"
# eps(file.path(outdir, "IGBP_Majority_LC_Class.eps"))
png(file.path(ourdir, "IGBP_Majority_LC_Class.png"),
width = 1240, height = 1000)
plot(r, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
dev.off()
png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
width = 1240, height = 1000)
plot(r, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
dev.off()
eps(file.path(outdir, "IGBP_Majority_LC_Class.eps"),
width = 10, height = 8)
?eps
svg(file.path(outdir, "IGBP_Majority_LC_Class.svg"),
width = 10, height = 8)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
dev.off()
e <- extent(-180,180,-60,85)
r.crop <- crop(r,e)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
svg(file.path(outdir, "IGBP_Majority_LC_Class.svg"),
width = 10, height = 6)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
dev.off()
svg(file.path(outdir, "IGBP_Majority_LC_Class.svg"),
width = 10, height = 10)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
dev.off()
svg(file.path(outdir, "IGBP_Majority_LC_Class.svg"),
width = 10, height = 7)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
dev.off()
svg(file.path(outdir, "IGBP_Majority_LC_Class.svg"),
width = 12, height = 8)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 3)
map("world", boundary = TRUE, add = TRUE)
dev.off()
svg(file.path(outdir, "IGBP_Majority_LC_Class.svg"),
width = 12, height = 8)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 5)
map("world", boundary = TRUE, add = TRUE)
dev.off()
svg(file.path(outdir, "IGBP_Majority_LC_Class.svg"),
width = 12, height = 8)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, main = "IGBP majority LC class", legend = FALSE, col = cols)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
map("world", boundary = TRUE, add = TRUE)
dev.off()
svg(file.path(outdir, "IGBP_Majority_LC_Class.svg"),
width = 12, height = 8)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, main = "IGBP majority LC class", legend = FALSE, col = cols)
map("world", boundary = TRUE, add = TRUE)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
dev.off()
svg(file.path(outdir, "IGBP_Majority_LC_Class.svg"),
width = 12, height = 9)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, main = "IGBP majority LC class", legend = FALSE, col = cols)
map("world", boundary = TRUE, add = TRUE)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
dev.off()
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, legend = FALSE, col = cols, cex.axis = 2)
map("world", boundary = TRUE, add = TRUE)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, legend = FALSE, col = cols, cex.axis = 2)
map("world", boundary = TRUE, add = TRUE)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
# png(file.path(outdir, "IGBP_Majority_LC_Class.png"),
# width = 1240, height = 1000)
plot(r.crop, legend = FALSE, col = cols, cex.axis = 2)
map("world", boundary = TRUE, add = TRUE)
legend("bottom", legend = ltext$V1, fill = cols, ncol = 4)
library(rgdal)
library(raster)
library(rgdal)
merit <- raster("/Volumes/HD2/MERIT/DEM/Merged_1_16/merged_merit_dem_1_16.tif")
tuo <- readOGR("/Users/jschap/Documents/Research/SWOTDA_temp/Tuolumne/Tuolumne2/Shapefiles/upper_tuolumne.shp")
merit.crop <- crop(merit, tuo)
plot(merit.crop)
merit.crop
origin(merit.crop)
writeRaster("/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_4/dem.tif")
library(raster)
writeRaster("/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_4/dem.tif")
writeRaster(merit.crop, file = "/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_4/dem.tif")
e <- extent(tuo)
e
values(e)
xmin(e)
xmin(e) <- xmin(e) - 1
xmax(e) <- xmax(e) + 1
ymin(e) <- ymin(e) - 1
ymax(e) <- ymax(e) + 1
dem.extended <- crop(merit, e)
plot(dem.extended)
dem.extended
dem
merit.crop
writeRaster(dem.extended, file = "/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_4/dem_extended.tif")
precip <- raster('/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_4/Classic_VICGlobal/Processed_WB_SB/Figures/average_precipitation.tif')
precip
origin(precip)
plot(precip)
precip <- raster('/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_4/Classic_VICGlobal/Processed_WB_SB/Figures/average_precipitation.tif')
plot(precip)
precip <- raster('/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_4/Classic_VICGlobal/Processed_WB_SB/Figures/average_precipitation.tif')
plot(precip)
exit()
quit()
dem <- raster("/Users/jschap/Documents/Research/VICGlobal/Data/dem.tif")
library(raster)
dem <- raster("/Users/jschap/Documents/Research/VICGlobal/Data/dem.tif")
plot(dem)
dem
mask1 <- raster("/Users/jschap/Documents/Research/VICGlobal/Data")
mask1 <- raster("/Users/jschap/Documents/Research/VICGlobal/Data/study_area_mask.tif")
plot(mask1)
mask1
mask2 <- raster(
"/Users/jschap/Documents/Research/VICGlobal/Data/snsr_swe_mask.tif"
)
mask2
library(raster)
saveloc <- "/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_6/SWE_Validation/overlapping_times"
swe_map_vg <- readRDS(file.path(saveloc, "mean_swe_map_vg.rds"))
swe_map_livneh <- readRDS(file.path(saveloc, "mean_swe_map_livneh.rds"))
swe_ts_vg <- readRDS(file.path(saveloc, "mean_swe_ts_vg.rds"))
swe_ts_livneh <- readRDS(file.path(saveloc, "mean_swe_ts_livneh.rds"))
swe_map_livneh
swe_map_vg
mean(values(swe_map_livneh))
mean(values(swe_map_vg))
mean(values(swe_map_livneh), na.rm = TRUE)
swe_map_vg <- readRDS(file.path(saveloc, "mean_swe_map_vg.rds"))
swe_map_livneh <- readRDS(file.path(saveloc, "mean_swe_map_livneh.rds"))
swe_ts_vg <- readRDS(file.path(saveloc, "mean_swe_ts_vg.rds"))
swe_ts_livneh <- readRDS(file.path(saveloc, "mean_swe_ts_livneh.rds"))
mean(values(swe_map_livneh), na.rm = TRUE)
mean(values(swe_map_vg))
swe_map_livneh
plot(swe_map_livneh)
swe_map_vg <- raster(file.path(saveloc, "swe_vicglobal.tif"))
swe_map_livneh <- raster(file.path(saveloc, "swe_livneh.tif"))
swe_map_vg
swe_map_livneh
plot(swe_map_livneh)
mean(values(swe_map_livneh), na.rm = TRUE)
mean(values(swe_map_vg), na.rm = TRUE)
plot(swe_ts_vg)
swe_all_livneh <- file.path(saveloc, "swe_data_livneh_all.rds")
swe_all_livneh
swe_all_livneh <- readRDS(file.path(saveloc, "swe_data_livneh_all.rds"))
swe_all_livneh
swe_all_livneh[[1]]
plot(swe_all_livneh[[1]])
plot(swe_all_livneh[[10]])
max(swe_ts_livneh)
mean(swe_ts_livneh)
mean(values(swe_map_livneh), na.rm = TRUE)
mean(values(swe_map_vg), na.rm = TRUE)
load(file.path(saveloc, "mean_swe_map_livneh.rds"))
load("/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_6/SWE_Validation/overlapping_times/snsr_swe_comparison_3.rda")
s_brick
s_brick_copy
s_brick_sub
mean(values(s_brick_sub[[1]]))
mean(values(s_brick_sub[[1]]), na.rm=T)
swe_ts_livneh[1]
swe_ts_vg[1]
swe_ts_vg <- vector(length = nlayers(s_brick_sub))
for (k in 1:length(swe_ts_vg))
{
swe_ts_vg[k] <- mean(values(s_brick_sub[[k]]), na.rm=T)
if (k%%1000==0)
{
print(k)
}
}
swe_ts_vg[1]
swe_ts_vg[1:10]
swe_ts_livneh[1:10]
plot(swe_ts_vg, type="l")
lines(swe_ts_livneh, col = "red")
mean(swe_ts_vg)
mean(values(swe_map_vg), na.rm = TRUE)
saveRDS(swe_ts_vg, file.path(saveloc, "mean_swe_ts_vg.rds"))
write.table(swe_ts_vg, file.path(saveloc, "swe_ts_vicglobal.txt"), row.names = FALSE)
i1
i2
raster(file.path(saveloc, "swe_map_snsr.tif"))
swe_map_snsr <- raster(file.path("/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_6/SWE_Validation/overlapping_times/Final", "swe_map_snsr.tif"))
plot(swe_map_snsr)
plot(swe_map_livneh)
plot(swe_map_vg)
swe_map_snsr <- raster(file.path("/Volumes/HD4/SWOTDA/Data/Tuolumne/v1_6/SWE_Validation/overlapping_times/Final", "swe_map_snsr.tif"))
plot(swe_map_snsr)
?raster
sample_swe <- brick(nrows = 2, ncols = 2, nlayers = 2)
s_brick
sample_swe <- raster(nrows = 2, ncols = 2, nlayers = 2)
?brick
sample_swe <- brick(nrows = 2, ncols = 2, nl = 2)
sample_swe
values(sample_swe[[1]])
sample_swe <- brick(nrows = 2, ncols = 2, nl = 2)
values(sample_swe[[1]]) <- c(4,3,2,NA)
values(sample_swe[[2]]) <- c(0,7,0,NA)
values(sample_swe[[1]]) <- c(4,3,2,NA)
values(sample_swe[[2]]) <- c(0,7,0,NA)
sample_swe
plot(sample_swe[[1]])
plot(sample_swe[[2]])
sample_swe_ts <- vector(length = nlayers(sample_swe))
for (k in 1:length(sample_swe))
{
sample_swe_ts[k] <- mean(values(sample_swe[[k]]), na.rm=T)
}
k
sample_swe_ts <- vector(length = nlayers(sample_swe))
for (k in 1:nlayers(sample_swe))
{
sample_swe_ts[k] <- mean(values(sample_swe[[k]]), na.rm=T)
}
sample_swe_ts
16/6
mean(sample_swe_ts)
# Try calculating average map
mean(sample_swe)
# Try calculating average map
sample_swe_map <- mean(sample_swe)
sample_swe_map
plot(sample_swe_map)
values(sample_swe_map)
mean(values(sample_swe_map), na.rm = TRUE)
2+5+1
(2+5+1)/3
dsmax <- raster('/Volumes/HD3/VICParametersGlobal/VICGlobal/v1_4/Figures/tifs_updated/dsmax.tif')
dsmax
plot(dsmax)
summary(dsmax)
dsmax_val <- values(dsmax)
hist(dsmax_val, "Fd")
sum(dsmax_val>500)
sum(dsmax_val>500, na.rm = T)
sum(dsmax_val><=500, na.rm = T)
sum(dsmax_val<=500, na.rm = T)
754/4140982*100
sum(dsmax_val>300, na.rm = T)
sum(dsmax_val>200, na.rm = T)
sum(dsmax_val>100, na.rm = T)
library(rgdal)
dat <- readOGR("/Volumes/HD3/WBD/wbdhu8_a_us_september2016.gdb")
ca_ind <- which(dat$STATES == "CA")
ca <- dat[ca_ind,]
ca$Shape_Area
ca_ind <- which(dat$STATES == "CA")
dat <- readOGR("/Volumes/HD3/WBD/wbdhu8_a_us_september2016.gdb")
ca_ind <- which(dat$STATES == "CA")
ca <- dat[ca_ind,]
tuo_ind <- which(ca$NAME == "Upper Tuolumne")
tuo <- ca[tuo_ind,]
tuo
area(tuo)
area(tuo)/1e6
quit()
library(rgdal)
huc2 <- readOGR("/Volumes/HD3/WBD/HUC2/Shape/WBDHU2.shp")
huc2
str(huc2)
plot(huc2)
huc2 <- readOGR("/Volumes/HD3/WBD/HUC2/Upp_Miss_07/Shape/WBDHU2.shp")
plot(huc2)
area(huc2)
library(raster)
area(huc2)
area(huc2)/1e6
irb_dem <-raster("/Volumes/HD4/SWOTDA/Data/IRB/dem.tif")
irb_dem <-raster("/Volumes/HD4/SWOTDA/Data/IRB/irb_dem.tif")
plot(irb_dem)
poly
p1
r
1mask
mask
?mask
library(RoutR)
# Use WBD polygon to make a basin mask
clip_raster()
# Use WBD polygon to make a basin mask
merit_mask <- raster("/Volumes/HD2/MERIT/DEM/Merged_1_16/merit_mask_1_16.tif")
umrb_mask <- clip_raster(merit_mask, huc2)
library(RoutR)
?clip_raster
umrb_mask <- clip_raster(merit_mask, huc2)
umrb_mask <- RoutR::clip_raster(merit_mask, huc2)
library(devtools)
library(roxygen2)
parent_dir <- "/Users/jschap/Documents/Codes/VICMATLAB/Routing/"
setwd(file.path(parent_dir, "RoutR"))
document()
setwd("..")
install("RoutR")
umrb_mask <- clip_raster(merit_mask, huc2)
plot(umrb_mask)
umrb_mask
umrb_mask[[1]]
values(umrb_mask)
?writeRaster
writeRaster(umrb_mask, "/Users/jschap/Documents/Research/VICGlobal/Data/UpperMiss/umrb_mask.tif",
NAflag = 0, datatype = "INT2S")
readOGR("/Volumes/HD3/WBD/wbdhu2_a_us_september2019.gdb")
huc2 <- readOGR("/Volumes/HD3/WBD/wbdhu2_a_us_september2019.gdb")
plot(huc2)
4
str(huc2)
names(huc2)
huc2$NAME
huc2$NAME[4]
huc2[[4]]
huc2$HUC2
huc2[1]
huc2[2]
huc2[3]
huc2[3][1]
huc2[3][[1]]
huc2[[3]]
str(huc2)
huc2@polygons[[4]]
plot(huc2@polygons[[4]])
huc2@data[1]
huc2@data[[1]]
coords(huc2@polygons)
coordinates(huc2@polygons)
coordinates(huc2@polygons[[4]])
huc2@polygons[[4]]
huc2@polygons[[4]]@coords
huc2@polygons[[4]]$coords
huc2@polygons[[4]][[1]]@coords
huc2@polygons[[4]][[1]]
huc2@polygons[4][[1]]
library(sf)
huc2_2 <- st_read("/Volumes/HD3/WBD/wbdhu2_a_us_september2019.gdb")
huc2_2
huc2_2[1]
huc2_2[[1]]
y <- st_drop_zm(huc2_2)
library(sp)
y <- st_drop_zm(huc2_2)
as(huc2_2, "Spatial")
huc2_3 <- as(huc2_2, "Spatial")
huc2_3
huc2_3[]
huc2_3[1]
huc2_3[[1]]
plot(huc2_3[[1]])
plot(huc2_3[[2]])
plot(huc2)
huc2_3
huc2_3[1,]
plot(huc2_3[1,])
plot(huc2_3[4,])
plot(huc2_3[7,])
huc2_3[4,]
huc2[1,]
huc2[4,]
upp_colo <- huc2[4,]
upp_colo <- huc2[4,]
colo_mask <- clip_raster(merit_mask, upp_colo)
plot(colo_mask)
writeRaster(colo_mask, "/Users/jschap/Documents/Research/VICGlobal/Data/Colorado/colo_mask.tif",
NAflag = 0, datatype = "INT2S")
area(colo_mask)/1e6
area(upp_colo)/1e6
